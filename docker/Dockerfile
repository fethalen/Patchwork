# To reduce the final image size, the build process has been split into a build
# stage and a production stage. After compiling Patchwork, the Julia
# installation is no longer needed and is therefore removed in the second stage.

# Stage 1/2: Build
# ----------------

# Set the base image
FROM ubuntu:22.04 AS builder

# System is non-interactive when building the Docker image
ENV DEBIAN_FRONTEND noninteractive

# Update the repository sources and install required tools and libraries
RUN apt-get update && apt-get install --yes --no-install-recommends \
    apt-utils \
    wget \
    gcc \
    ca-certificates \
    python3-matplotlib \
    libqt5widgets5

# RUN groupadd --gid 1000 patchwork \
#     && useradd --uid 1000 --gid patchwork --shell /bin/bash --create-home patchwork \
#     && chmod -R a+rwx /home/patchwork
# USER patchwork

# Set work directory
WORKDIR '/opt'

# Download and install Julia
RUN wget --quiet 'https://julialang-s3.julialang.org/bin/linux/x64/1.9/julia-1.9.0-rc3-linux-x86_64.tar.gz' \
    && tar -xvzf 'julia-1.9.0-rc3-linux-x86_64.tar.gz' \
    && rm 'julia-1.9.0-rc3-linux-x86_64.tar.gz'
ENV PATH /opt/julia-1.9.0-rc3/bin:${PATH}

# Download and install DIAMOND
RUN wget 'http://github.com/bbuchfink/diamond/releases/download/v2.1.6/diamond-linux64.tar.gz' \
    && tar -xvzf 'diamond-linux64.tar.gz' \
    && rm 'diamond-linux64.tar.gz'

# Doad and install Patchwork
ARG HWORK_VERSION='0.5.2'
RUN wget -O "patchwork-${PATCHWORK_VERSION}.tar.gz" "https://github.com/fethalen/Patchwork/archive/refs/tags/v${PATCHWORK_VERSION}.tar.gz" \
    && tar -xvzf "patchwork-${PATCHWORK_VERSION}.tar.gz" \
    && rm "patchwork-${PATCHWORK_VERSION}.tar.gz" \
    && cd "Patchwork-${PATCHWORK_VERSION}" \
    && julia --project=. -e "import Pkg; Pkg.instantiate()" \
    && julia --project=. src/compile.jl . src/precompiled.jl ../patchwork-$VERSION

# # Stage 2/2: Production
# # ---------------------

# # Set the base image
# FROM ubuntu:22.04

# # File maintainer
# MAINTAINER Felix Thalén <felix.thalen@cardio-care.ch>

# # System is non-interactive when building the Docker image
# ENV DEBIAN_FRONTEND noninteractive

# # Set time zone to Zurich, Europe
# ENV TZ=Europe/Zurich
# RUN ln -snf "/usr/share/zoneinfo/${TZ}" /etc/localtime && echo "$TZ" > /etc/timezone

# # Metadata
# LABEL base_image="ubuntu:20.04"
# LABEL version="1"
# LABEL software="Patchwork"
# LABEL software.version="0.5.2"
# LABEL about.author="Felix Thalén <felix.thalen@cardio-care.ch>"
# LABEL about.summary="Alignment-based Exon Retrieval and Concatenation with Phylogenomic Applications"
# LABEL about.home="https://github.com/fethalen/Patchwork"
# LABEL about.documentation="https://github.com/fethalen/Patchwork#readme"
# LABEL about.license="SPDX:GPL-3.0"
# LABEL about.license_file="https://github.com/fethalen/Patchwork/blob/main/LICENSE"
# LABEL about.tags="phylogenomics"

# RUN groupadd --gid 1000 patchwork \
#     && useradd --uid 1000 --gid patchwork --shell /bin/bash --create-home patchwork \
#     && chmod -R a+rwx /home/patchwork
# WORKDIR /home/patchwork
# USER patchwork
# ENV VERSION 0.5.2

# COPY --from=builder /home/patchwork/patchwork-$VERSION patchwork-$VERSION
# COPY --from=builder /home/patchwork/diamond diamond
# RUN ln -s patchwork-$VERSION/bin/patchwork patchwork
# ENV PATH /home/patchwork:$PATH

# CMD patchwork --help
